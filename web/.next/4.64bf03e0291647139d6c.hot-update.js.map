{"version":3,"sources":["/Users/manderson/Projects/MartianRover/2018/RubyYou/web/components/RubyBooth.js"],"names":["svgRubysGame","w","window","Clickers","props","console","log","hairClicked","el","findDOMNode","svg","faceClicked","clothesClicked","RubyBooth","clickHandler","e","state","width","height","updateWindowDimensions","bind","addEventListener","removeEventListener","setState","innerWidth","innerHeight","screenWidth","screenHeight","h","frameWidth","Math","min","maskRadius","cx","svgStyle","position","left","top","background","n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA,IAAMA,eAAe,uBAArB;;AAEA,IAAMC,IAAI,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,EAAhC,GAAqCA,MAA/C;;AAEA,IAAMC,WAAW,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1BC,UAAQC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;AACA,MAAMG,cAAc,SAAdA,WAAc,GAAM;AACxBF,YAAQC,GAAR,CAAY,qBAAZ;AACA,QAAIE,KAAK,8DAAAC,CAAYL,MAAMM,GAAlB,CAAT;AACA;AACAL,YAAQC,GAAR,CAAY,IAAZ,EAAkBE,EAAlB;AACD,GALD;AAMA,MAAMG,cAAc,SAAdA,WAAc,GAAM;AACxBN,YAAQC,GAAR,CAAY,qBAAZ;AACD,GAFD;AAGA,MAAMM,iBAAiB,SAAjBA,cAAiB,GAAM;AAC3BP,YAAQC,GAAR,CAAY,yBAAZ;AACD,GAFD;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,QAAK,IAAG,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,2EAAK,IAAG,cAAR,EAAuB,SAASC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAEE,2EAAK,IAAG,cAAR,EAAuB,SAASI,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AAGE;AAAA;AAAA,UAAK,IAAG,iBAAR,EAA0B,SAASC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF,KADF;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;AAyBD,CAvCD;;IAyCMC,S;;;AACJ,qBAAYT,KAAZ,EAAmB;AAAA;;AAAA,sHACXA,KADW;;AAAA,UAoBnBU,YApBmB,GAoBJ,UAACC,CAAD,EAAO;AACpBV,cAAQC,GAAR,CAAY,GAAZ,EAAiBS,CAAjB;AACD,KAtBkB;;AAEjB,UAAKC,KAAL,GAAa,EAAEC,OAAO,CAAT,EAAYC,QAAQ,CAApB,EAAb;AACA,UAAKC,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BC,IAA5B,OAA9B;AACA,UAAKV,GAAL,GAAW,IAAX;AAJiB;AAKlB;;;;wCAEmB;AAClB,WAAKS,sBAAL;AACAlB,QAAEoB,gBAAF,CAAmB,QAAnB,EAA6B,KAAKF,sBAAlC;AACD;;;2CAEsB;AACrBlB,QAAEqB,mBAAF,CAAsB,QAAtB,EAAgC,KAAKH,sBAArC;AACD;;;6CAEwB;AACvB,WAAKI,QAAL,CAAc,EAAEN,OAAOhB,EAAEuB,UAAX,EAAuBN,QAAQjB,EAAEwB,WAAjC,EAAd;AACD;;;6BAMQ;AAAA;;AACP,UAAMC,cAAc,KAAKV,KAAL,CAAWC,KAA/B;AACA,UAAMU,eAAe,KAAKX,KAAL,CAAWE,MAAhC;AACA,UAAMjB,IAAIyB,cAAc,GAAxB;AACA,UAAME,IAAID,eAAe,GAAzB;AACA,UAAME,aAAaC,KAAKC,GAAL,CAASH,CAAT,EAAY3B,CAAZ,CAAnB;AACA;AACA,UAAM+B,aAAaH,aAAa,GAAhC;AACA,UAAMI,KAAMP,cAAc,GAA1B;;AAEA,UAAMQ,WAAW;AACfjB,eAAOY,UADQ;AAEfM,kBAAU,UAFK;AAGfC,cAAMH,KAAKJ,aAAa,CAHT;AAIfQ,aAAK,CAACR,UAAD,GAAc,IAJJ;AAKfS,oBAAY;AALG,OAAjB;AAOA,aACE;AAAA;AAAA,UAAK,OAAO,EAACpB,QAAO,MAAR,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,sEAAC,QAAD,IAAU,KAAK,KAAKR,GAApB;AAAA;AAAA;AAAA;AAAA,YADF;AAEE;AAAA;AAAA,cAAsB,OAAO,EAAC4B,YAAW,MAAZ,EAA7B,gEAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,gBAAQ,MAAK,eAAb,EAA6B,MAAMtC,YAAnC,EAAiD,OAAOkC,QAAxD,EAAkE,SAAS,KAAKpB,YAAhF;AACE,qBAAK,aAACyB,CAAD,EAAO;AAAE,yBAAK7B,GAAL,GAAW6B,CAAX;AAAe,iBAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE;AAAA;AAAA,kBAAK,OAAOb,WAAZ,EAAyB,QAAQM,aAAa,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,sBAAU,IAAG,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACE,0BAAIC,EADN;AAEE,0BAAID,UAFN;AAGE,yBAAGA,UAHL;AAIE,8BAAO,SAJT;AAKE,mCAAY,GALd;AAME,4BAAK,MANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AADF;AADF,eAFF;AAAA;AAAA;AADF;AAFF,SADF;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AA4CD;;;;;;;;;EAtFqB,gD;;eAyFTnB,S;;;AAAf;;;;;;;;;;;;0BAtIMb,Y;0BAEAC,C;0BAEAE,Q;0BAyCAU,S","file":"4.64bf03e0291647139d6c.hot-update.js","sourcesContent":["import { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\n\n// See 'https://www.dropbox.com/s/ll8wqvsdmp2e6fp/RubysGame.svg?dl=0';\nconst svgRubysGame = '/static/RubysGame.svg';\n\nconst w = typeof window === 'undefined' ? {} : window;\n\nconst Clickers = (props) => {\n  console.log('Clicker props', props);\n  const hairClicked = () => {\n    console.log('hair was clicked ^_');\n    var el = findDOMNode(props.svg);\n    //.getElementById('Shape');\n    console.log('el', el);\n  }\n  const faceClicked = () => {\n    console.log('face was clicked ^_');\n  }\n  const clothesClicked = () => {\n    console.log('clothes were clicked ^_');\n  }\n  return (\n    <div>\n      <div id='clickers'>\n        <div id='hair-clicker' onClick={hairClicked}></div>\n        <div id='face-clicker' onClick={faceClicked}></div>\n        <div id='clothes-clicker' onClick={clothesClicked}>C</div>\n      </div>\n\n        <style jsx>{`\n          #clickers {\n            display: flex;\n            flex-direction: column;\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            z-index: 10;\n          }\n          #clickers div {\n            border: none;\n            height:100%;\n            width: 100%;\n          }\n        `}</style>\n      </div>\n  );\n}\n\nclass RubyBooth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { width: 0, height: 0 };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.svg = null;\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    w.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    w.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: w.innerWidth, height: w.innerHeight });\n  }\n\n  clickHandler = (e) => {\n    console.log('e', e);\n  };\n\n  render() {\n    const screenWidth = this.state.width;\n    const screenHeight = this.state.height;\n    const w = screenWidth * 0.8;\n    const h = screenHeight * 0.7;\n    const frameWidth = Math.min(h, w);\n    //const frameWidth = screenWidth * 0.95;\n    const maskRadius = frameWidth / 2.0;\n    const cx = (screenWidth / 2.0);\n\n    const svgStyle = {\n      width: frameWidth,\n      position: 'relative',\n      left: cx - frameWidth / 2,\n      top: -frameWidth * 0.15,\n      background: 'transparent',\n    }\n    return (\n      <div style={{height:'100%'}}>\n        <section>\n          <Clickers svg={this.svg} />\n          <div className='guts' style={{background:'none'}}>\n            <object type='image/svg+xml' data={svgRubysGame} style={svgStyle} onClick={this.clickHandler}\n              ref={(n) => { this.svg = n; } }>\n              <svg width={screenWidth} height={maskRadius * 2.0}>\n                <defs>\n                  <clipPath id='circle-mask'>\n                    <circle\n                      cx={cx}\n                      cy={maskRadius}\n                      r={maskRadius}\n                      stroke='#efefef'\n                      strokeWidth='1'\n                      fill='none'\n                    />\n                  </clipPath>\n                </defs>\n              </svg>\n\n              Your browser does not support SVG\n            </object>\n          </div>\n        </section>\n        <style jsx>{`\n          section {\n            position: relative;\n            width: 100%;\n            height: 100%;\n            margin: 0 auto;\n          }\n\n          .mask {\n            position: absolute;\n          }\n\n          .guts {\n            position: absolute;\n          }\n        `}</style>\n      </div>\n    )\n  }\n}\n\nexport default RubyBooth;\n\n\n\n// WEBPACK FOOTER //\n// ./components/RubyBooth.js"],"sourceRoot":""}